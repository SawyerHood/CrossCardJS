"use strict";!function(e){function t(e){for(var t=e*e+1,r=[],n=0;t>n;n++)r.push(0);return r}var r=1e4;e.calculateNextMove=function(n,a,i,o,s){for(var l=t(a.size),u=0;r>u;u++){var c=a.clone(),h=n.slice(0),d=e.playRandomGame(h,c,i,o,s);d!==!1&&(l[d]+=1)}var p=-1,f=-1;for(u=0;u<l.length;u++)l[u]>p&&(p=l[u],f=u);return e.toRowAndCol(f,a.size)},e.playRandomGame=function(t,r,n,a,i){var o,s,l;do o=Math.random()*(r.size*r.size+1),s=r.size*r.size==o,l=e.toRowAndCol(o,r.size);while(!s||!a||r.isOccupied(l[0],l[1]));s||r.placeCard(n,l[0],l[1]);for(var u=0;u<r.size;u++)for(var c=0;c<r.size;c++)r.isOccupied(u,c)||r.placeCard(t.pop(),u,c);return r.replaceFaceDownCards(t),i==r.getWinner()?o:!1},e.toOneDimIndex=function(e,t,r){return-1==e&&-1==t?r*r:0>e||e>=r||0>t||t>=r?-1:e*r+t},e.toRowAndCol=function(e,t){if(e==t*t)return[-1,-1];if(e>t*t||0>e)return-1;var r=[];return r.push(Math.floor(e/t)),r.push(Math.floor(e%t)),r}}("undefined"==typeof exports?this.crossCardAI={}:exports),function(e){e.Card=function(e,t){this.value=e,this.type=t},e.Player=function(e,t,r){this.type=e,this.name=t||"Sawyer",this.id=r||1,this.currentCard=null,this.reserveCard=null},e.Game=function(e,t,r,n){this.gameId=n||0,this.board=e,this.players=t,this.deck=r,this.playerIndex=0,this.getCurrentPlayer=function(){return this.players[this.playerIndex]},this.nextTurn=function(){this.playerIndex++,this.playerIndex>=this.players.length&&(this.playerIndex=0),null===this.getCurrentPlayer().reserveCard?this.getCurrentPlayer().currentCard=this.deck.pop():(this.getCurrentPlayer().currentCard=this.getCurrentPlayer().reserveCard,this.getCurrentPlayer().reserveCard=null)},this.playCard=function(t,r){var n=e.placeCard(this.getCurrentPlayer().currentCard,t,r);return n&&(this.getCurrentPlayer().currentCard=null),n},this.reserve=function(){var e=this.getCurrentPlayer();return null===e.reserveCard?(e.reserveCard=e.currentCard,e.currentCard=this.deck.pop(),!0):!1},this._makeHiddenPlayerSlice=function(e){return{id:e.id,name:e.name,type:e.type}},this.makeClientSlice=function(e){var t={board:this.board.board,player:this.players[0].id==e?this.players[0]:this.players[1],otherPlayer:this._makeHiddenPlayerSlice(this.players[0].id!=e?this.players[0]:this.players[1]),currentTurnId:this.getCurrentPlayer().id,gameId:this.gameId};return t},this.replaceFaceDownCards=function(){this.board.replaceFaceDownCards(this.deck)}},e.Board=function(t,r){this.clearBoard=function(){for(var t=[],r=0;r<this.size;r++){t.push([]);for(var n=0;n<this.size;n++)t[r].push(null)}return t.length%2!==0?t[t.length%2][t.length%2]=new e.Card(0,"CC"):(t[0][0]=new e.Card(0,"CC"),t[0][t.length-1]=new e.Card(0,"CC"),t[t.length-1][0]=new e.Card(0,"CC"),t[t.length-1][t.length-1]=new e.Card(0,"CC")),t},this.size=r||4,this.board=t||this.clearBoard(),this.isOccupied=function(e,t){return this.board.length<=e||this.board[e].length<=t?!0:null!==this.board[e][t]},this.isBoardFull=function(){for(var e=0;e<this.size;e++)for(var t=0;t<this.size;t++)if(!this.isOccupied(e,t))return!1;return!0},this.getRowValue=function(e){for(var t=0,r=0;r<this.board[e].length;r++)if(this.isOccupied(e,r))if("+"==this.board[e][r].type||"-"==this.board[e][r].type)t+=this.board[e][r].value;else if("*"==this.board[e][r].type)return 0;return t},this.getColValue=function(e){for(var t=0,r=0;r<this.board.length;r++)if(this.isOccupied(r,e))if("+"==this.board[r][e].type||"|"==this.board[r][e].type)t+=this.board[r][e].value;else if("*"==this.board[r][e].type)return 0;return t},this.placeCard=function(e,t,r){return this.isOccupied(t,r)?!1:(this.board[t][r]=e,!0)},this.getCard=function(e,t){return this.board[e][t]},this.getSortedColVaules=function(){for(var e=[],t=0;t<this.size;t++)e.push(this.getColValue(t));return e.sort(function(e,t){return t-e}),e},this.getSortedRowVaules=function(){for(var e=[],t=0;t<this.size;t++)e.push(this.getRowValue(t));return e.sort(function(e,t){return t-e}),e},this.getWinner=function(){if(this.isBoardFull()){var e=this.getSortedColVaules();console.log(e);for(var t=this.getSortedRowVaules(),r=0;r<this.size;r++){if(e[r]>t[r])return"|";if(t[r]>e[r])return"-"}}return null},this.replaceFaceDownCards=function(e){for(var t=0;t<this.size;t++)for(var r=0;r<this.size;r++){var n=this.getCard(t,r);n&&"CC"==n.type&&(this.board[t][r]=e.pop())}},this.clone=function(){for(var e=[],t=0;t<this.board.length;t++)e=this.board[t].slice(0);return this(e,this.size)}},e.shuffle=function(e){for(var t,r,n=e.length;n;t=Math.floor(Math.random()*n),r=e[--n],e[n]=e[t],e[t]=r);return e}}("undefined"==typeof exports?this.crossCardModels={}:exports),angular.module("crossCardApp",["ngRoute"]).controller("BoardController",["$scope","$http","baseDeck","game","$location",function(e,t,r,n,a){e.game=n,r=r.data,e.theme={},e.theme["-"]="/static/hori.svg",e.theme["+"]="/static/cross.svg",e.theme["|"]="/static/verti.svg",e.theme["*"]="/static/dot.svg",e.theme.CC="/static/swirl.svg",e.getCurrentPlayer=function(){return n.isMyTurn()?n.getPlayer().name+"'s ("+n.getPlayer().type+")":n.getOtherPlayer().name+"'s ("+n.getOtherPlayer().type+")"},e.playCard=function(t,r){e.game.isMyTurn()&&!e.game.hasMadeMove()&&(e.game.playCard(t,r)||alert("Choose another location."))},e.newGame=function(){n.startMatching(n.getPlayer().name),e.gameOver=!1,a.path("/")},e.reserve=function(){e.game.isMyTurn()&&!e.game.hasMadeMove()&&(e.game.reserve()||alert("Can't reserve"))},e.switchTurnOff=function(){e.switchTurn=!1},e.gameOver=!1,e.switchTurn=!1}]).controller("MatchingController",["$scope","$location","socket","game",function(e,t,r,n){e.game=n,e.connect=function(){n.startMatching(e.name)},r.on("game updated",function(){n.stopMatching(),t.path("/OnlineMultiplayerGame")})}]).config(function(e){e.when("/OnlineMultiplayerGame",{templateUrl:"static/partials/localMultiplayer.html",controller:"BoardController",resolve:{baseDeck:function(e){return e({method:"GET",url:"static/deck.json"}).success(function(e){return e}).error(function(e,t){console.log(t)})}}}).when("/",{templateUrl:"static/partials/matching.html",controller:"MatchingController"})}).run(function(e,t,r,n){e.on("disconnect",function(){console.log("Stopped"),r.stopMatching(),t.path("/").replace()}),e.on("booted",function(){console.log("Stopped"),r.stopMatching(),t.path("/").replace()}),n.$on("$routeChangeStart",function(e,n){r.isInGame()||"static/partials/localMultiplayer.html"===n.templateUrl&&t.path("/")})}).factory("socket",function(e){var t=io.connect();return{on:function(r,n){t.on(r,function(){var r=arguments;e.$apply(function(){n.apply(t,r)})})},emit:function(r,n,a){t.emit(r,n,function(){var r=arguments;e.$apply(function(){a&&a.apply(t,r)})})}}}).factory("game",function(e){function t(){n={board:new crossCardModels.Board,player:null,otherPlayer:null,currentTurnId:0,gameId:0},a=!1,i=!1,o=!1,s=!1}function r(e){for(var t in e)"board"!=t&&(n[t]=e[t]);a=!1,n.board.board=e.board,o=n.board.isBoardFull()?!0:!1}var n,a,i,o,s;return e.on("game updated",function(e){r(e)}),t(),{getBoard:function(){return n.board},playCard:function(t,r){var i=n.board.placeCard(n.player.currentCard,t,r);return i?(a=!0,e.emit("play card",{row:t,col:r,gameId:n.gameId}),!0):!1},reserve:function(){return n.player.reserveCard?!1:(a=!0,e.emit("reserve card",n.gameId),!0)},initGame:function(e){r(e)},getPlayer:function(){return n.player},getOtherPlayer:function(){return n.otherPlayer},isMyTurn:function(){return n.player.id==n.currentTurnId},hasMadeMove:function(){return a},isMatching:function(){return i},startMatching:function(r){t(),e.emit("new player",r),i=!0,s=!0},stopMatching:function(){i=!1},isGameOver:function(){return o},getWinner:function(){return n.player.type==n.board.getWinner()?n.player.name:n.otherPlayer.name},isInGame:function(){return s}}}).directive("crossCard",function(){return{restrict:"E",scope:{card:"=card",theme:"=theme"},templateUrl:"static/partials/card.html"}});